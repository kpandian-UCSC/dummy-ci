AWSTemplateFormatVersion: "2010-09-09"
Description: "Test Cloud Formation Deployment"

Parameters:
  S3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    Default: test-bucket-cloudformations
    Type: String
  S3BucketKey:
    AllowedPattern: ^[a-zA-Z0-9_./]*$
    Default: deploy.zip
    Type: String

Resources:
  Lambda1:
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: LambdaOne
      Code: src/
      Description: "Code Description 1"
      Handler: "lambda_function.lambda_handler"
      Role: !GetAtt "SampleLambdaRole.Arn"
      Runtime: python3.7
      MemorySize: 128
      Timeout: 60
  
  Gateway1:
    Type: 'AWS::ApiGatewayV2::Api'
    DependsOn: Lambda1
    Properties:
      Name: Gateway-Lambda1
      Description: Lambda HTTP Gateway Proxy
      Target: !GetAtt [ Lambda1, Arn ]
      ProtocolType: "HTTP"

  LambdaApiGatewayPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt [ Lambda1, Arn ]
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${Gateway1}/*


  Lambda2:
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: LambdaTwo
      Code: src/
      Description: "Code Description 2"
      Handler: "lambda_function2.lambda_handler"
      Role: !GetAtt "SampleLambdaRole.Arn"
      Runtime: python3.7
      MemorySize: 128
      Timeout: 60

  Gateway2:
    Type: 'AWS::ApiGatewayV2::Api'
    DependsOn: Lambda2
    Properties:
      Name: Gateway-Lambda2
      Description: Lambda HTTP Gateway Proxy
      Target: !GetAtt [ Lambda2, Arn ]
      ProtocolType: "HTTP"

  LambdaApiGatewayPermission2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt [ Lambda2, Arn ]
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${Gateway2}/*

  SampleLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: ["sts:AssumeRole"]
            Effect: "Allow"
            Principal:
              Service: ["lambda.amazonaws.com"]
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action: ["cloudwatch:*", "logs:*"]
                Effect: "Allow"
                Resource: "*"
          PolicyName: "lambdaLogPolicy"
