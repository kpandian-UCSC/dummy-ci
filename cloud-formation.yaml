AWSTemplateFormatVersion: "2010-09-09"
Description: "DataBricks Security SOAR Services"

Resources:
  Logger:
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: Logger
      Code: src/
      Description: "Code Description 1"
      Handler: "lambdas/logger_endpoint.lambda_handler"
      Role: !GetAtt "LambdaPolicy.Arn"
      Runtime: python3.7
      MemorySize: 128
      Timeout: 60
  
  LoggerGateway:
    Type: 'AWS::ApiGatewayV2::Api'
    DependsOn: Logger
    Properties:
      Name: LoggerGateway
      Description: Lambda HTTP Gateway Proxy
      Target: !GetAtt [ Logger, Arn ]
      ProtocolType: "HTTP"

  LambdaApiGatewayPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt [ Logger, Arn ]
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${LoggerGateway}/*

  LambdaPolicy:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: ["sts:AssumeRole"]
            Effect: "Allow"
            Principal:
              Service: ["lambda.amazonaws.com"]
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action: ["cloudwatch:*", 
                "logs:*",                 
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
                "secretsmanager:ListSecrets"]
                Effect: "Allow"
                Resource: "*"
          PolicyName: "lambdaLogPolicy"
