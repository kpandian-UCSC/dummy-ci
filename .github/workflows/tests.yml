name: Code-Quality

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, feature/**]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install pylint
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')
  
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install pip
        run: |
          python -m pip install --upgrade pipenv wheel
      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pip install -r requirements.txt
      - name: Run test suite
        run: |
          pytest ./tests/*.py

  auto-deploy-to-lambda:
    runs-on: ubuntu-latest
    needs: [lint, test]
    #if: github.ref == 'refs/heads/main'
    steps:      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #does this mean that the files in my github repo are accessible by this YAML file?
      - uses: actions/checkout@v2
      
      #installs a version of python, but I need this if deploying to a severless Python Lambda?
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      
      - name: Configure AWS credentials from Production account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          # TODO:::
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      
      - name: Install pip
        run: |
          python -m pip install --upgrade pipenv wheel
      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pip install -r requirements.txt
      # Runs a set of commands using the runners shell; THIS DOESN'T WORK
      - name: deploy
        run: |
          zip -j deploy.zip ./src/* #--> Zip the Code As we know lambda function accept the zip file.
          pwd
          ls
          # aws lambda update-function-code --function-name=lambda-gh-action-test --zip-file=fileb://deploy.zip 

      # Upload to S3
      - uses: shallwefootball/s3-upload-action@master
        name: Upload Files to S3 with coding
        id: S3
        with:
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: deploy.zip 

      # Upload Cloud Formations Template
      # - name: Deploy to AWS CloudFormation
      #   uses: aws-actions/aws-cloudformation-github-deploy@v1
      #   with:
      #     name: test-cf
      #     template: cloud-formation.yaml
      #     no-fail-on-empty-changeset: "1"

      # Run Cloud Formations Template to Deploy



# aws s3api put-object 
#   --bucket my-lambda-functions 
#   --key PullMarketCode
#   --region eu-west-1 
#   --body ./dist.zip